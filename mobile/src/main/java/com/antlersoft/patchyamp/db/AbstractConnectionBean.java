// This class was generated from com.antlersoft.patchyamp.db.IConnectionBean by a tool
// Do not edit this file directly! PLX THX
package com.antlersoft.patchyamp.db;

public abstract class AbstractConnectionBean extends com.antlersoft.android.dbimpl.IdImplementationBase implements IConnectionBean {

    public static final String GEN_TABLE_NAME = "CONNECTION_BEAN";
    public static final int GEN_COUNT = 7;

    // Field constants
    public static final String GEN_FIELD__ID = "_id";
    public static final int GEN_ID__ID = 0;
    public static final String GEN_FIELD_NICKNAME = "NICKNAME";
    public static final int GEN_ID_NICKNAME = 1;
    public static final String GEN_FIELD_URL = "URL";
    public static final int GEN_ID_URL = 2;
    public static final String GEN_FIELD_LOGIN = "LOGIN";
    public static final int GEN_ID_LOGIN = 3;
    public static final String GEN_FIELD_PASSWORD = "PASSWORD";
    public static final int GEN_ID_PASSWORD = 4;
    public static final String GEN_FIELD_VERIFIED = "VERIFIED";
    public static final int GEN_ID_VERIFIED = 5;
    public static final String GEN_FIELD_KEEPPASSWORD = "KEEPPASSWORD";
    public static final int GEN_ID_KEEPPASSWORD = 6;

    // SQL Command for creating the table
    public static String GEN_CREATE = "CREATE TABLE CONNECTION_BEAN (" +
    "_id INTEGER PRIMARY KEY AUTOINCREMENT," +
    "NICKNAME TEXT," +
    "URL TEXT," +
    "LOGIN INTEGER," +
    "PASSWORD TEXT," +
    "VERIFIED INTEGER," +
    "KEEPPASSWORD INTEGER" +
    ")";

    // Members corresponding to defined fields
    private long gen__Id;
    private java.lang.String gen_nickname;
    private java.lang.String gen_url;
    private int gen_login;
    private java.lang.String gen_password;
    private boolean gen_verified;
    private boolean gen_keepPassword;


    public String Gen_tableName() { return GEN_TABLE_NAME; }

    // Field accessors
    public long get_Id() { return gen__Id; }
    public void set_Id(long arg__Id) { gen__Id = arg__Id; }
    public java.lang.String getNickname() { return gen_nickname; }
    public void setNickname(java.lang.String arg_nickname) { gen_nickname = arg_nickname; }
    public java.lang.String getUrl() { return gen_url; }
    public void setUrl(java.lang.String arg_url) { gen_url = arg_url; }
    public int getLogin() { return gen_login; }
    public void setLogin(int arg_login) { gen_login = arg_login; }
    public java.lang.String getPassword() { return gen_password; }
    public void setPassword(java.lang.String arg_password) { gen_password = arg_password; }
    public boolean isVerified() { return gen_verified; }
    public void setVerified(boolean arg_verified) { gen_verified = arg_verified; }
    public boolean isKeepPassword() { return gen_keepPassword; }
    public void setKeepPassword(boolean arg_keepPassword) { gen_keepPassword = arg_keepPassword; }

    public android.content.ContentValues Gen_getValues() {
        android.content.ContentValues values=new android.content.ContentValues();
        values.put(GEN_FIELD__ID,Long.toString(this.gen__Id));
        values.put(GEN_FIELD_NICKNAME,this.gen_nickname);
        values.put(GEN_FIELD_URL,this.gen_url);
        values.put(GEN_FIELD_LOGIN,Integer.toString(this.gen_login));
        values.put(GEN_FIELD_PASSWORD,this.gen_password);
        values.put(GEN_FIELD_VERIFIED,(this.gen_verified ? "1" : "0"));
        values.put(GEN_FIELD_KEEPPASSWORD,(this.gen_keepPassword ? "1" : "0"));
        return values;
    }

    /**
     * Return an array that gives the column index in the cursor for each field defined
     * @param cursor Database cursor over some columns, possibly including this table
     * @return array of column indices; -1 if the column with that id is not in cursor
     */
    public int[] Gen_columnIndices(android.database.Cursor cursor) {
        int[] result=new int[GEN_COUNT];
        result[0] = cursor.getColumnIndex(GEN_FIELD__ID);
        // Make compatible with database generated by older version of plugin with uppercase column name
        if (result[0] == -1) {
            result[0] = cursor.getColumnIndex("_ID");
        }
        result[1] = cursor.getColumnIndex(GEN_FIELD_NICKNAME);
        result[2] = cursor.getColumnIndex(GEN_FIELD_URL);
        result[3] = cursor.getColumnIndex(GEN_FIELD_LOGIN);
        result[4] = cursor.getColumnIndex(GEN_FIELD_PASSWORD);
        result[5] = cursor.getColumnIndex(GEN_FIELD_VERIFIED);
        result[6] = cursor.getColumnIndex(GEN_FIELD_KEEPPASSWORD);
        return result;
    }

    /**
     * Populate one instance from a cursor 
     */
    public void Gen_populate(android.database.Cursor cursor,int[] columnIndices) {
        if ( columnIndices[GEN_ID__ID] >= 0 && ! cursor.isNull(columnIndices[GEN_ID__ID])) {
            gen__Id = cursor.getLong(columnIndices[GEN_ID__ID]);
        }
        if ( columnIndices[GEN_ID_NICKNAME] >= 0 && ! cursor.isNull(columnIndices[GEN_ID_NICKNAME])) {
            gen_nickname = cursor.getString(columnIndices[GEN_ID_NICKNAME]);
        }
        if ( columnIndices[GEN_ID_URL] >= 0 && ! cursor.isNull(columnIndices[GEN_ID_URL])) {
            gen_url = cursor.getString(columnIndices[GEN_ID_URL]);
        }
        if ( columnIndices[GEN_ID_LOGIN] >= 0 && ! cursor.isNull(columnIndices[GEN_ID_LOGIN])) {
            gen_login = (int)cursor.getInt(columnIndices[GEN_ID_LOGIN]);
        }
        if ( columnIndices[GEN_ID_PASSWORD] >= 0 && ! cursor.isNull(columnIndices[GEN_ID_PASSWORD])) {
            gen_password = cursor.getString(columnIndices[GEN_ID_PASSWORD]);
        }
        if ( columnIndices[GEN_ID_VERIFIED] >= 0 && ! cursor.isNull(columnIndices[GEN_ID_VERIFIED])) {
            gen_verified = (cursor.getInt(columnIndices[GEN_ID_VERIFIED]) != 0);
        }
        if ( columnIndices[GEN_ID_KEEPPASSWORD] >= 0 && ! cursor.isNull(columnIndices[GEN_ID_KEEPPASSWORD])) {
            gen_keepPassword = (cursor.getInt(columnIndices[GEN_ID_KEEPPASSWORD]) != 0);
        }
    }

    /**
     * Populate one instance from a ContentValues 
     */
    public void Gen_populate(android.content.ContentValues values) {
        gen__Id = values.getAsLong(GEN_FIELD__ID);
        gen_nickname = values.getAsString(GEN_FIELD_NICKNAME);
        gen_url = values.getAsString(GEN_FIELD_URL);
        gen_login = (int)values.getAsInteger(GEN_FIELD_LOGIN);
        gen_password = values.getAsString(GEN_FIELD_PASSWORD);
        gen_verified = (values.getAsInteger(GEN_FIELD_VERIFIED) != 0);
        gen_keepPassword = (values.getAsInteger(GEN_FIELD_KEEPPASSWORD) != 0);
    }
}
